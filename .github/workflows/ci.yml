name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types:
      - created

env:
  ESM_NAME: "@openmrs/esm-fast-data-entry-app"
  JS_NAME: "openmrs-esm-fast-data-entry-app.js"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "18.x"
      - run: yarn install --immutable
      - run: yarn verify
      - run: yarn build
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: |
            dist

  pre_release:
    runs-on: ubuntu-latest

    needs: build

    if: ${{ github.event_name == 'push' }}

    steps:
      - uses: actions/checkout@v3

      - name: Download Artifacts
        uses: actions/download-artifact@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "18.x"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: yarn install --immutable

      - run: yarn version "$(node -e "console.log(require('semver').inc(require('./package.json').version, 'patch'))")-pre.${{ github.run_number }}"
      - run: yarn build
      - run: git config user.email "info@openmrs.org" && git config user.name "OpenMRS CI"
      - run: git add . && git commit -m "Prerelease version" --no-verify
      - run: yarn npm publish --tag next
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: |
            dist

  release:
    runs-on: ubuntu-latest

    needs: build

    if: ${{ github.event_name == 'release' }}

    steps:
      - uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "18.x"
          registry-url: 'https://registry.npmjs.org'
      - run: yarn npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

  deploy_fast_data_entry_app:
    runs-on: ubuntu-latest

    env:
      DIR_NAME: "esm-fast-data-entry-app"
      ESM_NAME: "@openmrs/esm-fast-data-entry-app"
      JS_NAME: "openmrs-esm-fast-data-entry-app.js"

    needs: pre_release

    if: ${{ github.event_name == 'push' }}

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - name: Compute Timestamp
        run: echo "TIMESTAMP=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      - name: Prepare Directory
        shell: bash
        run: |
          mkdir -p publish/${{ env.ESM_NAME }}/${{ env.TIMESTAMP }}_${{ github.sha }}
          mv dist/*.* publish/${{ env.ESM_NAME }}/${{ env.TIMESTAMP }}_${{ github.sha }}/
      - name: Publish to Digital Ocean
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --cache-control "max-age=31536000"
        env:
          AWS_S3_BUCKET: ${{ secrets.DIGITAL_OCEAN_SPACES_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.DIGITAL_OCEAN_SPACES_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DIGITAL_OCEAN_SPACES_ACCESS_KEY }}
          AWS_S3_ENDPOINT: ${{ secrets.DIGITAL_OCEAN_SPACES_ENDPOINT }}
          SOURCE_DIR: "publish"
      - name: Update Importmap
        uses: fjogeleit/http-request-action@master
        with:
          url: http://${{ secrets.DEPLOYER_HOST }}/services?env=prod
          method: "PATCH"
          username: ${{ secrets.DEPLOYER_USERNAME }}
          password: ${{ secrets.DEPLOYER_PASSWORD }}
          data: '{ "service":"${{ env.ESM_NAME }}","url":"https://spa-modules.nyc3.cdn.digitaloceanspaces.com/${{ env.ESM_NAME }}/${{ env.TIMESTAMP }}_${{ github.sha }}/${{ env.JS_NAME }}" }'
          customHeaders: '{ "Accept": "application/json", "Content-Type": "application/json" }'
